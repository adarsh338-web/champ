#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define SIGNATURE_FILE "signatures.txt"
#define BUFFER_SIZE 1024


int scan_file(const char *filename) {
    FILE *file = fopen(filename, "rb");
    if (!file) {
        perror("Error opening file");
        return -1;
    }

    FILE *sig_file = fopen(SIGNATURE_FILE, "r");
    if (!sig_file) {
        perror("Error opening signature file");
        fclose(file);
        return -1;
    }

    char buffer[BUFFER_SIZE];
    char signature[BUFFER_SIZE];
    int infected = 0;

   
    fread(buffer, 1, BUFFER_SIZE, file);

    
    while (fgets(signature, BUFFER_SIZE, sig_file)) {
        signature[strcspn(signature, "\n")] = 0; 
        if (strstr(buffer, signature)) {
            printf("[ALERT] Malware detected in file: %s\n", filename);
            infected = 1;
            break;
        }
    }

    fclose(file);
    fclose(sig_file);
    return infected;
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s <filename>\n", argv[0]);
        return 1;
    }

    int result = scan_file(argv[1]);
    if (result == 0)
        printf("File is clean!\n");
    else if (result == 1)
        printf("File is infected!\n");
    
    return 0;
}
